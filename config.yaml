user:

install:
  version: 1.9.2

config:
  protocol: http              # http or https
  port: 8080

  tls:
    enabled: True
    type: standalone          # standalone or clientserver. Standalone will generate self-signed certs on each node.
    server_addr: null         # fill this out if using clientserver
    server_port: null         # fill this out if using clientserver

  # Enabling this will configure some of the NiFi Recommended Best Practices
  # See: https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#configuration-best-practices
  best_practices:
    enabled: True

disk:
  enabled: False
  mount_point: /mnt

cluster:

{% if salt.pillar.get('nifi:cluster') %}
# Set via pillar, which comes from AWS EC2 Instance User Data
  enabled: True
  name: {{ salt.pillar.get('nifi:cluster:name') }}
  type: embedded

# The outer-loop returns the private_ip grain of all nifi servers.
# The next inner-loop gets the nifi_cluster_name from each nifi server individually, and compares it to this
# system's cluster_name. If they match, append to the zk_servers list.
{% set nifi_servers = [] %}
{% set zk_servers = [] %}
{% for server, ip in salt.mine.get('role:nifi', 'private_ip', tgt_type='grain').items() %}
{%   for name, cluster_name in salt.mine.get(server, 'nifi_cluster_name', tgt_type='glob').items() %}
{%     if cluster_name == my_cluster_name %}
{%       do nifi_servers.append(ip~':2181') %}
{%       do zk_servers.append(ip) %}
{%     endif %}
{%   endfor %}
{% endfor %}
  connect_string: {{ nifi_servers|join(',') }}
  #zk_servers: {{ zk_servers }}
  zk_servers: ['ubuntu', 'abcd', 'efgh']

{% else %}
  # Set manually
  enabled: False
  name: ''
  type: embedded              # embedded or external
  connect_string: ''
{% endif %}