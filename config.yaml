user:
  name: nifi
  home_dir: /opt/nifi

group:
  name: nifi

install:
  version: 1.9.2  # Gets concatenated into nifi-<version>-bin.tar.gz

  java: {{ 'java-1.8.0-openjdk-headless.x86_64' if grains['os_family'] == "RedHat" else 'java-1.8.0-openjdk-headless.x86_64' }}
  
config:
  web:
    protocol: http              # http or https
    port: 8080

  tls:
    enabled: True
    type: standalone          # standalone or clientserver. Standalone will generate self-signed certs on each node.
    server_addr: null         # fill this out if using clientserver
    server_port: null         # fill this out if using clientserver

  # Enabling this will configure some of the NiFi Recommended Best Practices
  # See: https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#configuration-best-practices
  best_practices:
    enabled: True

disk:
  enabled: False
  mount_point: /mnt

cluster:

{% if salt.pillar.get('nifi:cluster') %}
# Import cluster.yaml, which has the logic to find the other NiFi servers to be clustered with.
{% import_yaml slspath~'/cluster.yaml' as cluster %}

# Dynamically set via pillar, which comes from AWS EC2 instance user data
  enabled: True
  name: {{ salt.pillar.get('nifi:cluster:name') }}
  type: {{ salt.pillar.get('nifi:cluster:type', 'embedded') }}
  connect_string: {{ cluster.connect_string }}
  #zk_servers: {# cluster.zk_servers #}
  zk_servers: ['ubuntu', 'abcd', 'efgh']

{% else %}
  # Manual cluster configuration
  enabled: False
  name: ''
  type: embedded              # embedded or external
  connect_string: ''
{% endif %}

upgrade:
  automatic: False  # Set to true to enable automatic upgrades.
                    # If you change the version for install, on the next run of that
                    # that state, the upgrade state will run automatically.